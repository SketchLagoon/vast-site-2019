{"version":3,"sources":["giveaways/giveaways.jsx","home/home.jsx","services/services.jsx","mobile-nav/mobile-nav.jsx","App.js","serviceWorker.js","index.js"],"names":["base","require","apiKey","Giveaways","props","componentDidMount","cb","airtableGiveaways","setState","giveaways","select","maxRecords","view","eachPage","records","fetchNextPage","forEach","record","push","_rawJson","fields","console","log","err","error","state","WOW","init","givewaysGrid","this","map","giveaway","Grid","item","xs","sm","href","gleamUrl","className","src","imgUrl","alt","client","endDate","desc","Container","fixed","data-wow-offset","data-wow-delay","container","spacing","Component","Home","srcset","Services","useStyles","makeStyles","root","width","position","bottom","background","SimpleDialog","onClose","selectedValue","open","Dialog","aria-labelledby","action","method","placeholder","type","name","value","LabelBottomNavigation","classes","React","useState","URL","window","location","pathname","toString","setValue","setOpen","setSelectedValue","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","onClick","App","path","component","exact","config","navigator","process","origin","addEventListener","swUrl","isLocalhost","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","register","Boolean","hostname","match","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e6daed1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport WOW from \"wowjs\";\nimport \"../home/App.css\";\n\n// require('dotenv').config()\n\nconst Airtable = require(\"airtable\");\n// var AIRTABLE_API_KEY = process.env.REACT_APP_AIRTABLE_API_KEY;\n// var AIRTABLE_BASE_ID = process.env.REACT_APP_AIRTABLE_BASE_ID;\nconst base = new Airtable({ apiKey: \"key2rS5KPkm5x8R7I\" }).base(\n  \"applPoA2NeoQ18YDa\"\n);\n\nclass Giveaways extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      giveaways: []\n    };\n  }\n\n  componentDidMount = () => {\n    // console.log(AIRTABLE_API_KEY)\n\n    const getAirtableData = cb =>\n      base(\"site-giveaways\")\n        .select({\n          // Selecting the first 100 records in Grid view:\n          maxRecords: 100,\n          view: \"Grid view\"\n        })\n        .eachPage(\n          function page(records, fetchNextPage) {\n            // This function (`page`) will get called for each page of records.\n            const airtableGiveaways = [];\n\n            records.forEach(function(record) {\n              airtableGiveaways.push(record._rawJson.fields);\n              cb(airtableGiveaways);\n              console.log(airtableGiveaways);\n            });\n\n            // To fetch the next page of records, call `fetchNextPage`.\n            // If there are more records, `page` will get called again.\n            // If there are no more records, `done` will get called.\n            fetchNextPage();\n          },\n          function done(err) {\n            if (err) {\n              console.error(err);\n              return;\n            } else {\n            }\n          }\n        );\n\n    getAirtableData(airtableGiveaways => {\n      this.setState({\n        giveaways: airtableGiveaways\n      });\n      // console.log(this.state)\n    });\n  };\n\n  render() {\n\n    const wow = new WOW.WOW();    \n    wow.init();\n    \n\n    const givewaysGrid = this.state.giveaways.map(function(giveaway) {\n      //iterate a delay for data-wow-offset=\"2\" data-wow-delay={delay} attributes\n        return (\n        <Grid item xs={12} sm={4}>\n          <a href={giveaway.gleamUrl}>\n            <div className=\"giveaway-card wow fadeInRight\">\n              <img\n                src={giveaway.imgUrl}\n                alt=\"giveaway brand here\"\n                className=\"giveaway-card-img\"\n              />\n              <div className=\"giveaway-card-text\">\n                <h1 className=\"giveaway-card-text-title\">{giveaway.client}</h1>\n                <p className=\"giveaway-card-text-date\">\n                  Winner Drawn: {giveaway.endDate}\n                </p>\n                <p className=\"giveaway-card-text-details\">{giveaway.desc}</p>\n              </div>\n            </div>\n          </a>\n        </Grid>\n      );\n      \n    });\n\n    return (\n      <Container fixed className=\"content\">\n        <p\n          className=\"wow fadeIn instructions\"\n          data-wow-offset=\"12\"\n          data-wow-delay=\"1.2s\"\n        >\n          Tap Image To Enter\n        </p>\n        <Grid container spacing={4} className=\"giveaway-grid\">\n          {givewaysGrid}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default Giveaways;\n","import React, { Component } from \"react\";\nimport Giveaways from \"../giveaways/giveaways\"\nimport WOW from \"wowjs\";\nimport \"./App.css\";\n\nclass Home extends Component {\n\n  componentDidMount = () => {\n    const wow = new WOW.WOW();    \n    wow.init();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <video id=\"bgVideo\" preload=\"true\" autoPlay loop muted>\n          <source src=\"background-mp4.mp4\" type=\"video/mp4\" />\n          <source src=\"background-webm.webm\" type=\"video/webm\" />\n        </video> */}\n\n        <div className=\"mobile-header wow fadeInDown\">\n          <div className=\"wow fadeIn mobile-header-content\" data-wow-offset=\"10\" data-wow-delay=\"1s\">\n            <img src=\"./vast.png\" alt=\"\" srcset=\"\" className=\"mobile-header-logo\"/>\n            <div className=\"mobile-header-message\">\n              <h1 className=\"mobile-header-title\">FEELING LUCKY?</h1>\n              <p className=\"mobile-header-text\">Enter one of our giveaways today for your chance at winning new Gaming PC’s, Graphics Cards, exclusive merch, and more!</p>\n            </div>\n          </div>\n        </div>\n\n        <Giveaways/>\n\n        </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../home/App.css\";\n\nfunction Services() {\n  return (\n    <div>\n      {/* <video id=\"bgVideo\" preload=\"true\" autoPlay loop muted>\n        <source src=\"background-mp4.mp4\" type=\"video/mp4\" />\n        <source src=\"background-webm.webm\" type=\"video/webm\" />\n      </video> */}\n      <Container fixed>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={4}>\n              <div className=\"services-card\">\n                <div className=\"services-card-header\">test</div>\n              </div>\n            </Grid>\n          </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default Services;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport \"../home/App.css\"\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100vw\",\n    position: \"fixed\",\n    bottom: 0,\n    background: \"#2d4179\",\n  }\n});\n\nfunction SimpleDialog(props) {\n\n\n  \n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <form action=\"https://formspree.io/jawright94@gmail.com\" method=\"POST\">\n        <input placeholder=\"Name\" type=\"text\" name=\"name\" />\n        <input placeholder=\"Email\" type=\"email\" name=\"_replyto\" />\n        <input placeholder=\"Message...\" type=\"text\" name=\"message\"/>\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nexport default function LabelBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(new URL(window.location.href).pathname.toString());\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState();\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    //set contact form to re-apply nav selection to page instead of contact here\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    setSelectedValue(value);\n  };\n\n  const loadHome = () =>{\n    window.location.href = \"/\";\n  }\n\n  const loadServices = () =>{\n    window.location.href = \"/services\";\n  }\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={handleChange}\n      className={classes.root}\n    >\n   \n        <BottomNavigationAction\n          label=\"Giveaways\"\n          value=\"/\"\n          icon={<CardGiftcardIcon />}\n          onClick={loadHome}\n        />\n   \n     \n        <BottomNavigationAction\n          label=\"Services\"\n          value=\"/services\"\n          icon={<BusinessCenterIcon />}\n          onClick={loadServices}\n        />\n     \n      \n      <BottomNavigationAction\n        label=\"Contact\"\n        value=\"nearby\"\n        icon={<ForumIcon />}\n        onClick={handleClickOpen}\n      />\n       <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n      \n      \n    </BottomNavigation>\n  );\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./home/home\";\nimport Services from \"./services/services\";\nimport Giveaways from \"./giveaways/giveaways\"\nimport LabelBottomNavigation from \"./mobile-nav/mobile-nav\";\n// import WOW from \"wowjs\";\nimport \"./home/App.css\";\n\nclass App extends Component {\n\n  // componentDidMount = () => {\n  //   const wow = new WOW.WOW();    \n  //   wow.init();\n  // };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Route path={\"/giveaways\"} component={Giveaways} />\n        <Route path={\"/services\"} component={Services} />\n        <Route exact path={\"/\"} component={Home} />\n        <LabelBottomNavigation className=\"nav\"></LabelBottomNavigation>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\nregister()\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}